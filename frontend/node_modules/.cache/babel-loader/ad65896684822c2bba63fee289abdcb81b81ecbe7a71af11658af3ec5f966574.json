{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const isValidIP = ip => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('IP no vÃ¡lida');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput,\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput || null\n      });\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      setMessage('Dispositivo agregado exitosamente');\n      fetchDevices();\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n      setMessage('Error al agregar dispositivo');\n    }\n  };\n  const deleteDevice = async ip => {\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar este dispositivo?')) {\n      try {\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\n        fetchDevices();\n      } catch (err) {\n        console.error('Error deleting device:', err);\n        setMessage('Error al eliminar dispositivo');\n      }\n    }\n  };\n  const pingAll = async ips => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', {\n        devices: ips\n      });\n      setDevices(prev => prev.map(dev => {\n        const found = res.data.find(d => d.ip === dev.ip);\n        return found ? {\n          ...dev,\n          alive: found.alive\n        } : dev;\n      }));\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n      setMessage('Error al hacer ping a los dispositivos');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDeviceImage = type => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n  const handleUpdateDevices = () => {\n    const ips = devices.map(d => d.ip);\n    pingAll(ips);\n  };\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n  const handleTabChange = segment => {\n    setActiveTab(segment);\n  };\n\n  // Mostrar jerarquÃ­a de dispositivos\n  const DeviceTree = ({\n    devices,\n    parentId = null,\n    isRoot = true\n  }) => {\n    const children = devices.filter(device => {\n      var _device$parent;\n      const deviceParentId = ((_device$parent = device.parent) === null || _device$parent === void 0 ? void 0 : _device$parent._id) || null;\n      return deviceParentId === parentId;\n    });\n    if (children.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: isRoot ? 'flex' : 'block',\n        justifyContent: 'center',\n        position: 'relative',\n        paddingTop: isRoot ? 20 : 10\n      },\n      children: children.map((device, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          margin: 20,\n          position: 'relative'\n        },\n        children: [!isRoot && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: -10,\n            left: '50%',\n            width: 2,\n            height: 10,\n            backgroundColor: '#ccc',\n            transform: 'translateX(-50%)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            border: '1px solid #ddd',\n            borderRadius: 6,\n            padding: 10,\n            backgroundColor: '#f9f9f9',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getDeviceImage(device.type),\n            alt: device.type,\n            style: {\n              width: 32,\n              height: 32,\n              marginBottom: 5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: device.name || 'Sin nombre'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 63\n            }, this), device.ip, \" \", device.alive ? 'ðŸŸ¢' : 'ðŸ”´']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteDevice(device.ip),\n            style: {\n              marginTop: 5\n            },\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), (() => {\n          const childElements = /*#__PURE__*/_jsxDEV(DeviceTree, {\n            devices: devices,\n            parentId: device._id,\n            isRoot: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this);\n          if (!childElements) return null;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              marginTop: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: 0,\n                left: 'calc(50% - 50px)',\n                width: 100,\n                height: 2,\n                backgroundColor: '#ccc',\n                zIndex: 0\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center'\n              },\n              children: childElements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this);\n        })()]\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(fetchDevices, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const deviceGroups = groupDevicesBySegment();\n  const filteredDevices = activeTab ? devices.filter(d => d.ip.startsWith(activeTab)) : devices;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"IP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value),\n        placeholder: \"Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: parentInput,\n        onChange: e => setParentInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Dispositivo Padre (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: device._id,\n          children: [device.ip, \" - \", device.name]\n        }, device._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(deviceGroups).map(segment => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange(segment),\n        style: {\n          margin: 5,\n          padding: 10,\n          backgroundColor: activeTab === segment ? '#007bff' : '#ccc',\n          color: activeTab === segment ? '#fff' : '#000',\n          borderRadius: 5\n        },\n        children: segment\n      }, segment, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DeviceTree, {\n        devices: filteredDevices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD52 Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateDevices,\n      children: \"Actualizar Estado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rF6aRv6QjWUIYBSvs+3ai+w36r4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","nameInput","setNameInput","typeInput","setTypeInput","parentInput","setParentInput","devices","setDevices","loading","setLoading","message","setMessage","activeTab","setActiveTab","isValidIP","ip","regex","test","fetchDevices","res","get","data","pingAll","map","d","err","console","error","addDevice","post","name","type","parent","deleteDevice","window","confirm","delete","ips","prev","dev","found","find","alive","getDeviceImage","handleUpdateDevices","groupDevicesBySegment","groups","reduce","acc","device","segment","split","slice","join","push","handleTabChange","DeviceTree","parentId","isRoot","children","filter","_device$parent","deviceParentId","_id","length","style","display","justifyContent","position","paddingTop","index","textAlign","margin","top","left","width","height","backgroundColor","transform","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","alignItems","border","borderRadius","padding","boxShadow","src","alt","marginBottom","onClick","marginTop","childElements","zIndex","interval","setInterval","clearInterval","deviceGroups","filteredDevices","startsWith","value","onChange","e","target","placeholder","Object","keys","color","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n\n  const isValidIP = (ip) => {\n    const regex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map((d) => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('IP no vÃ¡lida');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput,\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput || null,\n      });\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      setMessage('Dispositivo agregado exitosamente');\n      fetchDevices();\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n      setMessage('Error al agregar dispositivo');\n    }\n  };\n\n  const deleteDevice = async (ip) => {\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar este dispositivo?')) {\n      try {\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\n        fetchDevices();\n      } catch (err) {\n        console.error('Error deleting device:', err);\n        setMessage('Error al eliminar dispositivo');\n      }\n    }\n  };\n\n  const pingAll = async (ips) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', { devices: ips });\n      setDevices((prev) =>\n        prev.map((dev) => {\n          const found = res.data.find((d) => d.ip === dev.ip);\n          return found ? { ...dev, alive: found.alive } : dev;\n        })\n      );\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n      setMessage('Error al hacer ping a los dispositivos');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDeviceImage = (type) => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n\n  const handleUpdateDevices = () => {\n    const ips = devices.map((d) => d.ip);\n    pingAll(ips);\n  };\n\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n\n  const handleTabChange = (segment) => {\n    setActiveTab(segment);\n  };\n\n  // Mostrar jerarquÃ­a de dispositivos\n  const DeviceTree = ({ devices, parentId = null, isRoot = true }) => {\n    const children = devices.filter((device) => {\n      const deviceParentId = device.parent?._id || null;\n      return deviceParentId === parentId;\n    });\n  \n    if (children.length === 0) return null;\n  \n    return (\n      <div\n        style={{\n          display: isRoot ? 'flex' : 'block',\n          justifyContent: 'center',\n          position: 'relative',\n          paddingTop: isRoot ? 20 : 10,\n        }}\n      >\n        {children.map((device, index) => (\n          <div key={device._id} style={{ textAlign: 'center', margin: 20, position: 'relative' }}>\n            {/* LÃ­nea horizontal desde el padre a los hijos */}\n            {!isRoot && (\n              <div\n                style={{\n                  position: 'absolute',\n                  top: -10,\n                  left: '50%',\n                  width: 2,\n                  height: 10,\n                  backgroundColor: '#ccc',\n                  transform: 'translateX(-50%)',\n                }}\n              />\n            )}\n  \n            {/* Nodo del dispositivo */}\n            <div\n              style={{\n                display: 'inline-flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                border: '1px solid #ddd',\n                borderRadius: 6,\n                padding: 10,\n                backgroundColor: '#f9f9f9',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                position: 'relative',\n              }}\n            >\n              <img\n                src={getDeviceImage(device.type)}\n                alt={device.type}\n                style={{ width: 32, height: 32, marginBottom: 5 }}\n              />\n              <div>\n                <strong>{device.name || 'Sin nombre'}</strong><br />\n                {device.ip} {device.alive ? 'ðŸŸ¢' : 'ðŸ”´'}\n              </div>\n              <button\n                onClick={() => deleteDevice(device.ip)}\n                style={{ marginTop: 5 }}\n              >\n                Eliminar\n              </button>\n            </div>\n  \n            {/* Hijos y lÃ­nea horizontal */}\n            {(() => {\n              const childElements = (\n                <DeviceTree devices={devices} parentId={device._id} isRoot={false} />\n              );\n              if (!childElements) return null;\n  \n              return (\n                <div style={{ position: 'relative', marginTop: 20 }}>\n                  {/* LÃ­nea horizontal entre hijos */}\n                  <div\n                    style={{\n                      position: 'absolute',\n                      top: 0,\n                      left: 'calc(50% - 50px)',\n                      width: 100,\n                      height: 2,\n                      backgroundColor: '#ccc',\n                      zIndex: 0,\n                    }}\n                  />\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    {childElements}\n                  </div>\n                </div>\n              );\n            })()}\n          </div>\n        ))}\n      </div>\n    );\n  };\n  \n\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(fetchDevices, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const deviceGroups = groupDevicesBySegment();\n  const filteredDevices = activeTab\n    ? devices.filter((d) => d.ip.startsWith(activeTab))\n    : devices;\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Monitor de Dispositivos</h1>\n\n      <div style={{ marginBottom: 10 }}>\n        <input\n          value={ipInput}\n          onChange={(e) => setIpInput(e.target.value)}\n          placeholder=\"IP\"\n        />\n        <input\n          value={nameInput}\n          onChange={(e) => setNameInput(e.target.value)}\n          placeholder=\"Nombre\"\n        />\n        <select value={typeInput} onChange={(e) => setTypeInput(e.target.value)}>\n          <option value=\"router\">Router</option>\n          <option value=\"antena\">Antena</option>\n          <option value=\"server\">Server</option>\n        </select>\n        <select value={parentInput} onChange={(e) => setParentInput(e.target.value)}>\n          <option value=\"\">Dispositivo Padre (opcional)</option>\n          {devices.map((device) => (\n            <option key={device._id} value={device._id}>\n              {device.ip} - {device.name}\n            </option>\n          ))}\n        </select>\n        <button onClick={addDevice}>Agregar</button>\n      </div>\n\n      {message && <p>{message}</p>}\n\n      <div>\n        {Object.keys(deviceGroups).map((segment) => (\n          <button\n            key={segment}\n            onClick={() => handleTabChange(segment)}\n            style={{\n              margin: 5,\n              padding: 10,\n              backgroundColor: activeTab === segment ? '#007bff' : '#ccc',\n              color: activeTab === segment ? '#fff' : '#000',\n              borderRadius: 5,\n            }}\n          >\n            {segment}\n          </button>\n        ))}\n      </div>\n\n      <div>\n        <DeviceTree devices={filteredDevices} />\n      </div>\n\n      {loading && <p>ðŸ•’ Cargando...</p>}\n\n      <button onClick={handleUpdateDevices}>Actualizar Estado</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}