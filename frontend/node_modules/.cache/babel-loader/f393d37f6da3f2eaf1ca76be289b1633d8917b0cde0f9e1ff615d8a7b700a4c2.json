{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [portInput, setPortInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const isValidIP = ip => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('IP no vÃ¡lida');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput,\n        port: portInput || '80',\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput || null\n      });\n      setIpInput('');\n      setPortInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      setMessage('Dispositivo agregado exitosamente');\n      fetchDevices();\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n      setMessage('Error al agregar dispositivo');\n    }\n  };\n  const deleteDevice = async ip => {\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar este dispositivo?')) {\n      try {\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\n        fetchDevices();\n      } catch (err) {\n        console.error('Error deleting device:', err);\n        setMessage('Error al eliminar dispositivo');\n      }\n    }\n  };\n  const pingAll = async ips => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', {\n        devices: ips\n      });\n      setDevices(prev => prev.map(dev => {\n        const found = res.data.find(d => d.ip === dev.ip);\n        return found ? {\n          ...dev,\n          alive: found.alive\n        } : dev;\n      }));\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n      setMessage('Error al hacer ping a los dispositivos');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDeviceImage = type => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n  const handleUpdateDevices = () => {\n    const ips = devices.map(d => d.ip);\n    pingAll(ips);\n  };\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n  const handleTabChange = segment => {\n    setActiveTab(segment);\n  };\n  const DeviceTree = ({\n    devices,\n    parentId = null,\n    isRoot = true\n  }) => {\n    const children = devices.filter(device => {\n      var _device$parent;\n      const deviceParentId = ((_device$parent = device.parent) === null || _device$parent === void 0 ? void 0 : _device$parent._id) || null;\n      return deviceParentId === parentId;\n    });\n    if (children.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: isRoot ? 'row' : 'column',\n        alignItems: isRoot ? 'top' : 'flex-start',\n        position: 'relative',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        marginLeft: isRoot ? 0 : 0,\n        borderLeft: isRoot ? 'none' : '2px solid #ccc',\n        paddingLeft: isRoot ? 0 : 20,\n        width: '100%'\n      },\n      children: children.map(device => {\n        const hasChildren = devices.some(d => {\n          var _d$parent;\n          return (((_d$parent = d.parent) === null || _d$parent === void 0 ? void 0 : _d$parent._id) || null) === device._id;\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: isRoot ? '10px' : '10px 0',\n            textAlign: 'left',\n            position: 'relative',\n            backgroundColor: isRoot ? '#fff' : 'transparent',\n            boxShadow: isRoot ? '0 2px 4px rgba(0,0,0,0.1)' : 'none',\n            padding: isRoot ? 10 : 0\n          },\n          children: [!isRoot && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: -10,\n              left: -20,\n              width: 20,\n              height: 2,\n              backgroundColor: '#ccc'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeviceNode, {\n            device: device\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(DeviceTree, {\n              devices: devices,\n              parentId: device._id,\n              isRoot: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, device._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  };\n  const DeviceNode = ({\n    device\n  }) => {\n    const backgroundColor = device.alive ? '#e0fbe0' : '#fde0e0';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        border: '1px solid #ddd',\n        padding: 5,\n        backgroundColor,\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n        fontSize: '0.9em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getDeviceImage(device.type),\n        alt: device.type,\n        style: {\n          width: 20,\n          height: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          lineHeight: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"-| \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: device.name || 'Sin nombre'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 16\n          }, this), \" | \", device.ip, device.port !== 80 ? `:${device.port}` : '', \" | \", device.alive ? `ðŸŸ¢ (${device.method})` : `ðŸ”´ (${device.method})`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteDevice(device.ip),\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(fetchDevices, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const deviceGroups = groupDevicesBySegment();\n  const filteredDevices = activeTab ? devices.filter(d => d.ip.startsWith(activeTab)) : devices;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"IP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: portInput,\n        onChange: e => setPortInput(e.target.value),\n        placeholder: \"Puerto (opcional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value),\n        placeholder: \"Nombre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Servidor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: parentInput,\n        onChange: e => setParentInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Dispositivo Padre (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: device._id,\n          children: [device.ip, \" - \", device.name]\n        }, device._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar Dispositivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateDevices,\n        children: \"Actualizar Estado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: 20,\n        justifyContent: 'center'\n      },\n      children: Object.keys(deviceGroups).map(segment => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleTabChange(segment),\n        style: {\n          margin: '0 10px',\n          padding: '5px 10px',\n          cursor: 'pointer',\n          backgroundColor: activeTab === segment ? '#ccc' : '#eee'\n        },\n        children: segment\n      }, segment, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceTree, {\n      devices: filteredDevices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nvR5ljR1Gg+B1mZm5ljad2mC9ko=\");\n_c = App;\nconst LoadingOverlay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(255, 255, 255, 0)',\n    zIndex: 9999,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 50,\n      height: 50,\n      border: '6px solid #f3f3f3',\n      borderTop: '6px solid #3498db',\n      borderRadius: '50%',\n      animation: 'spin 1s linear infinite'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n    children: `@keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 291,\n  columnNumber: 3\n}, this);\n_c2 = LoadingOverlay;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"LoadingOverlay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","portInput","setPortInput","nameInput","setNameInput","typeInput","setTypeInput","parentInput","setParentInput","devices","setDevices","loading","setLoading","message","setMessage","activeTab","setActiveTab","isValidIP","ip","regex","test","fetchDevices","res","get","data","pingAll","map","d","err","console","error","addDevice","post","port","name","type","parent","deleteDevice","window","confirm","delete","ips","prev","dev","found","find","alive","getDeviceImage","handleUpdateDevices","groupDevicesBySegment","groups","reduce","acc","device","segment","split","slice","join","push","handleTabChange","DeviceTree","parentId","isRoot","children","filter","_device$parent","deviceParentId","_id","length","style","display","flexDirection","alignItems","position","flexWrap","justifyContent","marginLeft","borderLeft","paddingLeft","width","hasChildren","some","_d$parent","margin","textAlign","backgroundColor","boxShadow","padding","top","left","height","fileName","_jsxFileName","lineNumber","columnNumber","DeviceNode","marginTop","border","fontSize","src","alt","lineHeight","method","onClick","interval","setInterval","clearInterval","deviceGroups","filteredDevices","startsWith","marginBottom","value","onChange","e","target","placeholder","Object","keys","cursor","LoadingOverlay","_c","zIndex","borderTop","borderRadius","animation","_c2","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [ipInput, setIpInput] = useState('');\n  const [portInput, setPortInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n\n  const isValidIP = (ip) => {\n    const regex =\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map((d) => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('IP no vÃ¡lida');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput,\n        port: portInput || '80',\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput || null,\n      });\n      setIpInput('');\n      setPortInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      setMessage('Dispositivo agregado exitosamente');\n      fetchDevices();\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n      setMessage('Error al agregar dispositivo');\n    }\n  };\n\n  const deleteDevice = async (ip) => {\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar este dispositivo?')) {\n      try {\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\n        fetchDevices();\n      } catch (err) {\n        console.error('Error deleting device:', err);\n        setMessage('Error al eliminar dispositivo');\n      }\n    }\n  };\n\n  const pingAll = async (ips) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', { devices: ips });\n      setDevices((prev) =>\n        prev.map((dev) => {\n          const found = res.data.find((d) => d.ip === dev.ip);\n          return found ? { ...dev, alive: found.alive } : dev;\n        })\n      );\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n      setMessage('Error al hacer ping a los dispositivos');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getDeviceImage = (type) => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n\n  const handleUpdateDevices = () => {\n    const ips = devices.map((d) => d.ip);\n    pingAll(ips);\n  };\n\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n\n  const handleTabChange = (segment) => {\n    setActiveTab(segment);\n  };\n\n  const DeviceTree = ({ devices, parentId = null, isRoot = true }) => {\n    const children = devices.filter((device) => {\n      const deviceParentId = device.parent?._id || null;\n      return deviceParentId === parentId;\n    });\n\n    if (children.length === 0) return null;\n\n    return (\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: isRoot ? 'row' : 'column',\n          alignItems: isRoot ? 'top' : 'flex-start',\n          position: 'relative',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          marginLeft: isRoot ? 0 : 0,\n          borderLeft: isRoot ? 'none' : '2px solid #ccc',\n          paddingLeft: isRoot ? 0 : 20,\n          width: '100%',\n        }}\n      >\n        {children.map((device) => {\n          const hasChildren = devices.some((d) => (d.parent?._id || null) === device._id);\n          return (\n            <div\n              key={device._id}\n              style={{\n                margin: isRoot ? '10px' : '10px 0',\n                textAlign: 'left',\n                position: 'relative',\n                backgroundColor: isRoot ? '#fff' : 'transparent',\n                boxShadow: isRoot ? '0 2px 4px rgba(0,0,0,0.1)' : 'none',\n                padding: isRoot ? 10 : 0,\n              }}\n            >\n              {!isRoot && (\n                <div\n                  style={{\n                    position: 'absolute',\n                    top: -10,\n                    left: -20,\n                    width: 20,\n                    height: 2,\n                    backgroundColor: '#ccc',\n                  }}\n                />\n              )}\n              <DeviceNode device={device} />\n              {hasChildren && (\n                <div style={{ marginTop: 10 }}>\n                  <DeviceTree devices={devices} parentId={device._id} isRoot={false} />\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  const DeviceNode = ({ device }) => {\n    const backgroundColor = device.alive ? '#e0fbe0' : '#fde0e0';\n\n    return (\n      <div\n        style={{\n          display: 'inline-flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'space-around',\n          border: '1px solid #ddd',\n          padding: 5,\n          backgroundColor,\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          fontSize: '0.9em',\n        }}\n      >\n        <img\n          src={getDeviceImage(device.type)}\n          alt={device.type}\n          style={{ width: 20, height: 20 }}\n        />\n        <div style={{ display: 'flex', flexDirection: 'column', lineHeight: 1 }}>\n          <span>\n            -| <strong>{device.name || 'Sin nombre'}</strong> | {device.ip}\n            {device.port !== 80 ? `:${device.port}` : ''} | {device.alive ? `ðŸŸ¢ (${device.method})` : `ðŸ”´ (${device.method})`}\n\n          </span>\n        </div>\n        <button onClick={() => deleteDevice(device.ip)}>Eliminar</button>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(fetchDevices, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const deviceGroups = groupDevicesBySegment();\n  const filteredDevices = activeTab\n    ? devices.filter((d) => d.ip.startsWith(activeTab))\n    : devices;\n\n  return (\n    <div style={{ padding: 20, position: 'relative' }}>\n      <h1>Monitor de Dispositivos</h1>\n\n      <div style={{ marginBottom: 10 }}>\n        <input value={ipInput} onChange={(e) => setIpInput(e.target.value)} placeholder=\"IP\" />\n        <input value={portInput} onChange={(e) => setPortInput(e.target.value)} placeholder=\"Puerto (opcional)\" />\n        <input value={nameInput} onChange={(e) => setNameInput(e.target.value)} placeholder=\"Nombre\" />\n        <select value={typeInput} onChange={(e) => setTypeInput(e.target.value)}>\n          <option value=\"router\">Router</option>\n          <option value=\"antena\">Antena</option>\n          <option value=\"server\">Servidor</option>\n        </select>\n        <select value={parentInput} onChange={(e) => setParentInput(e.target.value)}>\n          <option value=\"\">Dispositivo Padre (opcional)</option>\n          {devices.map((device) => (\n            <option key={device._id} value={device._id}>\n              {device.ip} - {device.name}\n            </option>\n          ))}\n        </select>\n        <button onClick={addDevice}>Agregar Dispositivo</button>\n        <button onClick={handleUpdateDevices}>Actualizar Estado</button>\n      </div>\n\n      {message && <p>{message}</p>}\n\n      <div\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          margin: 20,\n          justifyContent: 'center',\n        }}\n      >\n        {Object.keys(deviceGroups).map((segment) => (\n          <div\n            key={segment}\n            onClick={() => handleTabChange(segment)}\n            style={{\n              margin: '0 10px',\n              padding: '5px 10px',\n              cursor: 'pointer',\n              backgroundColor: activeTab === segment ? '#ccc' : '#eee',\n            }}\n          >\n            {segment}\n          </div>\n        ))}\n      </div>\n\n      <DeviceTree devices={filteredDevices} />\n\n      {loading && <LoadingOverlay />}\n    </div>\n  );\n}\n\nconst LoadingOverlay = () => (\n  <div\n    style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgba(255, 255, 255, 0)',\n      zIndex: 9999,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n  >\n    <div\n      style={{\n        width: 50,\n        height: 50,\n        border: '6px solid #f3f3f3',\n        borderTop: '6px solid #3498db',\n        borderRadius: '50%',\n        animation: 'spin 1s linear infinite',\n      }}\n    />\n    <style>\n      {`@keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }`}\n    </style>\n  </div>\n);\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}