{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [portInput, setPortInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n  const [alertType, setAlertType] = useState(''); // Variable para manejar el tipo de alerta\n\n  const isValidIP = ip => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n      setMessage('Error al obtener dispositivos');\n      setAlertType('error'); // Error alert\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('IP no vÃ¡lida');\n      setAlertType('error'); // Error alert\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput,\n        port: portInput || '80',\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput || null\n      });\n      setIpInput('');\n      setPortInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      setMessage('Dispositivo agregado exitosamente');\n      setAlertType('success'); // Success alert\n      fetchDevices();\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n      setMessage('Error al agregar dispositivo');\n      setAlertType('error'); // Error alert\n    }\n  };\n  const deleteDevice = async ip => {\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar este dispositivo?')) {\n      try {\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\n        fetchDevices();\n      } catch (err) {\n        console.error('Error deleting device:', err);\n        setMessage('Error al eliminar dispositivo');\n        setAlertType('error'); // Error alert\n      }\n    }\n  };\n  const pingAll = async ips => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', {\n        devices: ips\n      });\n      setDevices(prev => prev.map(dev => {\n        const found = res.data.find(d => d.ip === dev.ip);\n        return found ? {\n          ...dev,\n          alive: found.alive\n        } : dev;\n      }));\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n      setMessage('Error al hacer ping a los dispositivos');\n      setAlertType('error'); // Error alert\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getDeviceImage = type => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n  const handleUpdateDevices = () => {\n    const ips = devices.map(d => d.ip);\n    pingAll(ips);\n  };\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n  const handleTabChange = segment => {\n    setActiveTab(segment);\n  };\n  const DeviceTree = ({\n    devices,\n    parentId = null,\n    isRoot = true\n  }) => {\n    const children = devices.filter(device => {\n      var _device$parent;\n      const deviceParentId = ((_device$parent = device.parent) === null || _device$parent === void 0 ? void 0 : _device$parent._id) || null;\n      return deviceParentId === parentId;\n    });\n    if (children.length === 0) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: isRoot ? 'row' : 'column',\n        alignItems: isRoot ? 'top' : 'flex-start',\n        position: 'relative',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        marginLeft: isRoot ? 0 : 0,\n        borderLeft: isRoot ? 'none' : '2px solid #ccc',\n        paddingLeft: isRoot ? 0 : 20,\n        width: '100%'\n      },\n      children: children.map(device => {\n        const hasChildren = devices.some(d => {\n          var _d$parent;\n          return (((_d$parent = d.parent) === null || _d$parent === void 0 ? void 0 : _d$parent._id) || null) === device._id;\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: isRoot ? '10px' : '10px 0',\n            textAlign: 'left',\n            position: 'relative',\n            backgroundColor: isRoot ? '#fff' : 'transparent',\n            boxShadow: isRoot ? '0 2px 4px rgba(0,0,0,0.1)' : 'none',\n            padding: isRoot ? 10 : 0\n          },\n          children: [!isRoot && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: -10,\n              left: -20,\n              width: 20,\n              height: 2,\n              backgroundColor: '#ccc'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DeviceNode, {\n            device: device\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 10\n            },\n            children: /*#__PURE__*/_jsxDEV(DeviceTree, {\n              devices: devices,\n              parentId: device._id,\n              isRoot: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this)]\n        }, device._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  };\n  const DeviceNode = ({\n    device\n  }) => {\n    const backgroundColor = device.alive ? '#e0fbe0' : '#fde0e0';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        border: '1px solid #ddd',\n        padding: 5,\n        backgroundColor,\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n        fontSize: '0.9em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getDeviceImage(device.type),\n        alt: device.type,\n        style: {\n          width: 20,\n          height: 20,\n          marginRight: 5\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          lineHeight: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"-| \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: device.name || 'Sin nombre'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 16\n          }, this), \" | \", device.ip, device.port !== 80 ? `:${device.port}` : '', \" | \", device.alive ? `ðŸŸ¢ (${device.method})` : `ðŸ”´ (${device.method})`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteDevice(device.ip),\n        style: {\n          marginLeft: 10\n        },\n        children: \"Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(fetchDevices, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const deviceGroups = groupDevicesBySegment();\n  const filteredDevices = activeTab ? devices.filter(d => d.ip.startsWith(activeTab)) : devices;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      position: 'relative',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: 20\n      },\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20,\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n        gap: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        style: {\n          padding: 8,\n          borderRadius: 6,\n          border: '1px solid #ccc'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Servidor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value),\n        placeholder: \"Nombre\",\n        style: {\n          padding: 8,\n          borderRadius: 6,\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"IP\",\n        style: {\n          padding: 8,\n          borderRadius: 6,\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: portInput,\n        onChange: e => setPortInput(e.target.value),\n        placeholder: \"Puerto\",\n        style: {\n          padding: 8,\n          borderRadius: 6,\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: parentInput,\n        onChange: e => setParentInput(e.target.value),\n        placeholder: \"ID del padre (opcional)\",\n        style: {\n          padding: 8,\n          borderRadius: 6,\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDevice,\n      style: {\n        padding: '10px 20px',\n        borderRadius: 6,\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        cursor: 'pointer'\n      },\n      children: \"Agregar Dispositivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), alert.message && /*#__PURE__*/_jsxDEV(Alert, {\n      type: alert.type,\n      message: alert.message,\n      onClose: () => setAlert({\n        message: '',\n        type: 'success'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginTop: 40\n      },\n      children: \"Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(deviceGroups).map(segment => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange(segment),\n        style: {\n          padding: 8,\n          borderRadius: 6,\n          marginRight: 10,\n          backgroundColor: activeTab === segment ? '#4CAF50' : '#ddd',\n          color: activeTab === segment ? 'white' : 'black',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: segment\n      }, segment, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceTree, {\n      devices: filteredDevices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xy9RNZDOeIfO0z8Z5Uma2OmeivI=\");\n_c = App;\nconst Alert = ({\n  type = 'success',\n  message,\n  onClose\n}) => {\n  _s2();\n  const background = type === 'success' ? '#d4edda' : '#f8d7da';\n  const color = type === 'success' ? '#155724' : '#721c24';\n  const border = type === 'success' ? '#c3e6cb' : '#f5c6cb';\n  useEffect(() => {\n    const timeout = setTimeout(onClose, 4000);\n    return () => clearTimeout(timeout);\n  }, [onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 20,\n      left: '50%',\n      transform: 'translateX(-50%)',\n      background,\n      color,\n      border: `1px solid ${border}`,\n      padding: '10px 20px',\n      borderRadius: 6,\n      boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\n      zIndex: 9999,\n      minWidth: 300,\n      textAlign: 'center',\n      fontWeight: 'bold'\n    },\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n_s2(Alert, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = Alert;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Alert\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","portInput","setPortInput","nameInput","setNameInput","typeInput","setTypeInput","parentInput","setParentInput","devices","setDevices","loading","setLoading","message","setMessage","activeTab","setActiveTab","alertType","setAlertType","isValidIP","ip","regex","test","fetchDevices","res","get","data","pingAll","map","d","err","console","error","addDevice","post","port","name","type","parent","deleteDevice","window","confirm","delete","ips","prev","dev","found","find","alive","getDeviceImage","handleUpdateDevices","groupDevicesBySegment","groups","reduce","acc","device","segment","split","slice","join","push","handleTabChange","DeviceTree","parentId","isRoot","children","filter","_device$parent","deviceParentId","_id","length","style","display","flexDirection","alignItems","position","flexWrap","justifyContent","marginLeft","borderLeft","paddingLeft","width","hasChildren","some","_d$parent","margin","textAlign","backgroundColor","boxShadow","padding","top","left","height","fileName","_jsxFileName","lineNumber","columnNumber","DeviceNode","marginTop","border","fontSize","src","alt","marginRight","lineHeight","method","onClick","interval","setInterval","clearInterval","deviceGroups","filteredDevices","startsWith","fontFamily","marginBottom","gridTemplateColumns","gap","value","onChange","e","target","borderRadius","placeholder","color","cursor","alert","Alert","onClose","setAlert","Object","keys","_c","_s2","background","timeout","setTimeout","clearTimeout","transform","zIndex","minWidth","fontWeight","_c2","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [ipInput, setIpInput] = useState('');\r\n  const [portInput, setPortInput] = useState('');\r\n  const [nameInput, setNameInput] = useState('');\r\n  const [typeInput, setTypeInput] = useState('router');\r\n  const [parentInput, setParentInput] = useState('');\r\n  const [devices, setDevices] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [activeTab, setActiveTab] = useState('');\r\n  const [alertType, setAlertType] = useState(''); // Variable para manejar el tipo de alerta\r\n\r\n  const isValidIP = (ip) => {\r\n    const regex =\r\n      /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n    return regex.test(ip);\r\n  };\r\n\r\n  const fetchDevices = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/devices');\r\n      setDevices(res.data);\r\n      pingAll(res.data.map((d) => d.ip));\r\n    } catch (err) {\r\n      console.error('Error fetching devices:', err);\r\n      setMessage('Error al obtener dispositivos');\r\n      setAlertType('error'); // Error alert\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addDevice = async () => {\r\n    if (!isValidIP(ipInput)) {\r\n      setMessage('IP no vÃ¡lida');\r\n      setAlertType('error'); // Error alert\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://localhost:3001/devices', {\r\n        ip: ipInput,\r\n        port: portInput || '80',\r\n        name: nameInput,\r\n        type: typeInput,\r\n        parent: parentInput || null,\r\n      });\r\n      setIpInput('');\r\n      setPortInput('');\r\n      setNameInput('');\r\n      setTypeInput('router');\r\n      setParentInput('');\r\n      setMessage('Dispositivo agregado exitosamente');\r\n      setAlertType('success'); // Success alert\r\n      fetchDevices();\r\n    } catch (error) {\r\n      console.error('Error al agregar dispositivo:', error);\r\n      setMessage('Error al agregar dispositivo');\r\n      setAlertType('error'); // Error alert\r\n    }\r\n  };\r\n\r\n  const deleteDevice = async (ip) => {\r\n    if (window.confirm('Â¿EstÃ¡s seguro de que quieres eliminar este dispositivo?')) {\r\n      try {\r\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\r\n        fetchDevices();\r\n      } catch (err) {\r\n        console.error('Error deleting device:', err);\r\n        setMessage('Error al eliminar dispositivo');\r\n        setAlertType('error'); // Error alert\r\n      }\r\n    }\r\n  };\r\n\r\n  const pingAll = async (ips) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:3001/ping', { devices: ips });\r\n      setDevices((prev) =>\r\n        prev.map((dev) => {\r\n          const found = res.data.find((d) => d.ip === dev.ip);\r\n          return found ? { ...dev, alive: found.alive } : dev;\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.error('Error pinging devices:', err);\r\n      setMessage('Error al hacer ping a los dispositivos');\r\n      setAlertType('error'); // Error alert\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getDeviceImage = (type) => {\r\n    switch (type) {\r\n      case 'router':\r\n        return '/images/router.png';\r\n      case 'antena':\r\n        return '/images/antena.png';\r\n      case 'server':\r\n        return '/images/server.png';\r\n      default:\r\n        return '/images/default.png';\r\n    }\r\n  };\r\n\r\n  const handleUpdateDevices = () => {\r\n    const ips = devices.map((d) => d.ip);\r\n    pingAll(ips);\r\n  };\r\n\r\n  const groupDevicesBySegment = () => {\r\n    const groups = devices.reduce((acc, device) => {\r\n      const segment = device.ip.split('.').slice(0, 3).join('.');\r\n      if (!acc[segment]) {\r\n        acc[segment] = [];\r\n      }\r\n      acc[segment].push(device);\r\n      return acc;\r\n    }, {});\r\n    return groups;\r\n  };\r\n\r\n  const handleTabChange = (segment) => {\r\n    setActiveTab(segment);\r\n  };\r\n\r\n  const DeviceTree = ({ devices, parentId = null, isRoot = true }) => {\r\n    const children = devices.filter((device) => {\r\n      const deviceParentId = device.parent?._id || null;\r\n      return deviceParentId === parentId;\r\n    });\r\n\r\n    if (children.length === 0) return null;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: isRoot ? 'row' : 'column',\r\n          alignItems: isRoot ? 'top' : 'flex-start',\r\n          position: 'relative',\r\n          flexWrap: 'wrap',\r\n          justifyContent: 'center',\r\n          marginLeft: isRoot ? 0 : 0,\r\n          borderLeft: isRoot ? 'none' : '2px solid #ccc',\r\n          paddingLeft: isRoot ? 0 : 20,\r\n          width: '100%',\r\n        }}\r\n      >\r\n        {children.map((device) => {\r\n          const hasChildren = devices.some((d) => (d.parent?._id || null) === device._id);\r\n          return (\r\n            <div\r\n              key={device._id}\r\n              style={{\r\n                margin: isRoot ? '10px' : '10px 0',\r\n                textAlign: 'left',\r\n                position: 'relative',\r\n                backgroundColor: isRoot ? '#fff' : 'transparent',\r\n                boxShadow: isRoot ? '0 2px 4px rgba(0,0,0,0.1)' : 'none',\r\n                padding: isRoot ? 10 : 0,\r\n              }}\r\n            >\r\n              {!isRoot && (\r\n                <div\r\n                  style={{\r\n                    position: 'absolute',\r\n                    top: -10,\r\n                    left: -20,\r\n                    width: 20,\r\n                    height: 2,\r\n                    backgroundColor: '#ccc',\r\n                  }}\r\n                />\r\n              )}\r\n              <DeviceNode device={device} />\r\n              {hasChildren && (\r\n                <div style={{ marginTop: 10 }}>\r\n                  <DeviceTree devices={devices} parentId={device._id} isRoot={false} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const DeviceNode = ({ device }) => {\r\n    const backgroundColor = device.alive ? '#e0fbe0' : '#fde0e0';\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'inline-flex',\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-around',\r\n          border: '1px solid #ddd',\r\n          padding: 5,\r\n          backgroundColor,\r\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n          fontSize: '0.9em',\r\n        }}\r\n      >\r\n        <img\r\n          src={getDeviceImage(device.type)}\r\n          alt={device.type}\r\n          style={{ width: 20, height: 20, marginRight: 5 }}\r\n        />\r\n        <div style={{ display: 'flex', flexDirection: 'column', lineHeight: 1 }}>\r\n          <span>\r\n            -| <strong>{device.name || 'Sin nombre'}</strong> | {device.ip}\r\n            {device.port !== 80 ? `:${device.port}` : ''} | {device.alive ? `ðŸŸ¢ (${device.method})` : `ðŸ”´ (${device.method})`}\r\n          </span>\r\n        </div>\r\n        <button onClick={() => deleteDevice(device.ip)} style={{ marginLeft: 10 }}>Eliminar</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDevices();\r\n    const interval = setInterval(fetchDevices, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const deviceGroups = groupDevicesBySegment();\r\n  const filteredDevices = activeTab\r\n    ? devices.filter((d) => d.ip.startsWith(activeTab))\r\n    : devices;\r\n\r\n  return (\r\n    <div style={{ padding: 20, position: 'relative', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1 style={{ textAlign: 'center', marginBottom: 20 }}>Monitor de Dispositivos</h1>\r\n\r\n      <div\r\n       style={{\r\n        marginBottom: 20,\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\r\n        gap: 10,\r\n      }}\r\n      >\r\n        <select value={typeInput} onChange={(e) => setTypeInput(e.target.value)} style={{ padding: 8, borderRadius: 6, border: '1px solid #ccc' }}>\r\n          <option value=\"router\">Router</option>\r\n          <option value=\"antena\">Antena</option>\r\n          <option value=\"server\">Servidor</option>\r\n        </select>\r\n        <input value={nameInput} onChange={(e) => setNameInput(e.target.value)} placeholder=\"Nombre\" style={{ padding: 8, borderRadius: 6, border: '1px solid #ccc' }} />\r\n\r\n        <input value={ipInput} onChange={(e) => setIpInput(e.target.value)} placeholder=\"IP\" style={{ padding: 8, borderRadius: 6, border: '1px solid #ccc' }} />\r\n        <input value={portInput} onChange={(e) => setPortInput(e.target.value)} placeholder=\"Puerto\" style={{ padding: 8, borderRadius: 6, border: '1px solid #ccc' }} />\r\n\r\n        <input value={parentInput} onChange={(e) => setParentInput(e.target.value)} placeholder=\"ID del padre (opcional)\" style={{ padding: 8, borderRadius: 6, border: '1px solid #ccc' }} />\r\n      </div>\r\n\r\n      <button\r\n        onClick={addDevice}\r\n        style={{\r\n          padding: '10px 20px',\r\n          borderRadius: 6,\r\n          backgroundColor: '#4CAF50',\r\n          color: 'white',\r\n          border: 'none',\r\n          cursor: 'pointer',\r\n        }}\r\n      >\r\n        Agregar Dispositivo\r\n      </button>\r\n\r\n      {alert.message && (\r\n        <Alert\r\n          type={alert.type}\r\n          message={alert.message}\r\n          onClose={() => setAlert({ message: '', type: 'success' })}\r\n        />\r\n      )}\r\n\r\n      {loading && <p>Cargando...</p>}\r\n\r\n      <h2 style={{ textAlign: 'center', marginTop: 40 }}>Dispositivos</h2>\r\n\r\n      <div>\r\n        {Object.keys(deviceGroups).map((segment) => (\r\n          <button\r\n            key={segment}\r\n            onClick={() => handleTabChange(segment)}\r\n            style={{\r\n              padding: 8,\r\n              borderRadius: 6,\r\n              marginRight: 10,\r\n              backgroundColor: activeTab === segment ? '#4CAF50' : '#ddd',\r\n              color: activeTab === segment ? 'white' : 'black',\r\n              border: 'none',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            {segment}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      <DeviceTree devices={filteredDevices} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Alert = ({ type = 'success', message, onClose }) => {\r\n  const background = type === 'success' ? '#d4edda' : '#f8d7da';\r\n  const color = type === 'success' ? '#155724' : '#721c24';\r\n  const border = type === 'success' ? '#c3e6cb' : '#f5c6cb';\r\n\r\n  useEffect(() => {\r\n    const timeout = setTimeout(onClose, 4000);\r\n    return () => clearTimeout(timeout);\r\n  }, [onClose]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 20,\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        background,\r\n        color,\r\n        border: `1px solid ${border}`,\r\n        padding: '10px 20px',\r\n        borderRadius: 6,\r\n        boxShadow: '0 2px 6px rgba(0,0,0,0.15)',\r\n        zIndex: 9999,\r\n        minWidth: 300,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n      }}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}