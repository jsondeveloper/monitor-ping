{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Downloads\\\\monitor-ping-mongo\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const fetchDevices = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n    } catch (err) {\n      console.error(\"Error al obtener dispositivos:\", err);\n    }\n  };\n  const addDevice = async () => {\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput.trim(),\n        name: '',\n        type: 'router'\n      });\n      setIpInput('');\n      fetchDevices(); // Actualizar la lista de dispositivos despu√©s de agregar uno\n    } catch (err) {\n      console.error(\"Error al agregar dispositivo:\", err);\n    }\n  };\n  const deleteDevice = async ip => {\n    try {\n      await axios.delete(`http://localhost:3001/devices/${ip}`);\n      fetchDevices(); // Actualizar la lista despu√©s de eliminar un dispositivo\n    } catch (err) {\n      console.error(\"Error al eliminar dispositivo:\", err);\n    }\n  };\n  const getDeviceImage = type => {\n    // Aqu√≠ puedes agregar im√°genes seg√∫n el tipo de dispositivo\n    switch (type) {\n      case 'antena':\n        return 'https://path_to_antenna_image.jpg';\n      // Reemplaza con el link correcto de la imagen\n      case 'router':\n        return 'https://path_to_router_image.jpg';\n      // Reemplaza con el link correcto de la imagen\n      case 'server':\n        return 'https://path_to_server_image.jpg';\n      // Reemplaza con el link correcto de la imagen\n      default:\n        return 'https://path_to_default_image.jpg';\n      // Imagen predeterminada\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n\n    // Establecer un intervalo para actualizar cada minuto (60000 ms)\n    const interval = setInterval(() => fetchDevices(), 60000);\n\n    // Limpiar el intervalo cuando el componente se desmonte\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"Ingresa IP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(d => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getDeviceImage(d.type),\n          alt: d.type,\n          style: {\n            width: 50,\n            height: 50,\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [d.name || d.ip, \" \\u2014 \", d.alive == null ? '‚è≥' : d.alive ? 'üü¢ Activo' : 'üî¥ Inactivo']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteDevice(d.ip),\n          style: {\n            marginLeft: 10\n          },\n          children: \"\\u274C Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, d.ip, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7Y7SdXjhzHvLFwAMWMk0QhrM7TU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","devices","setDevices","fetchDevices","res","get","data","err","console","error","addDevice","post","ip","trim","name","type","deleteDevice","delete","getDeviceImage","interval","setInterval","clearInterval","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","placeholder","onClick","map","d","display","alignItems","src","alt","width","height","marginRight","alive","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Downloads/monitor-ping-mongo/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [ipInput, setIpInput] = useState('');\n  const [devices, setDevices] = useState([]);\n\n  const fetchDevices = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n    } catch (err) {\n      console.error(\"Error al obtener dispositivos:\", err);\n    }\n  };\n\n  const addDevice = async () => {\n    try {\n      await axios.post('http://localhost:3001/devices', { ip: ipInput.trim(), name: '', type: 'router' });\n      setIpInput('');\n      fetchDevices();  // Actualizar la lista de dispositivos despu√©s de agregar uno\n    } catch (err) {\n      console.error(\"Error al agregar dispositivo:\", err);\n    }\n  };\n\n  const deleteDevice = async (ip) => {\n    try {\n      await axios.delete(`http://localhost:3001/devices/${ip}`);\n      fetchDevices();  // Actualizar la lista despu√©s de eliminar un dispositivo\n    } catch (err) {\n      console.error(\"Error al eliminar dispositivo:\", err);\n    }\n  };\n\n  const getDeviceImage = (type) => {\n    // Aqu√≠ puedes agregar im√°genes seg√∫n el tipo de dispositivo\n    switch (type) {\n      case 'antena':\n        return 'https://path_to_antenna_image.jpg';  // Reemplaza con el link correcto de la imagen\n      case 'router':\n        return 'https://path_to_router_image.jpg';  // Reemplaza con el link correcto de la imagen\n      case 'server':\n        return 'https://path_to_server_image.jpg';  // Reemplaza con el link correcto de la imagen\n      default:\n        return 'https://path_to_default_image.jpg';  // Imagen predeterminada\n    }\n  };\n\n  useEffect(() => {\n    fetchDevices();\n    \n    // Establecer un intervalo para actualizar cada minuto (60000 ms)\n    const interval = setInterval(() => fetchDevices(), 60000);\n\n    // Limpiar el intervalo cuando el componente se desmonte\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Monitor de Dispositivos</h1>\n      <div style={{ marginBottom: 10 }}>\n        <input\n          value={ipInput}\n          onChange={(e) => setIpInput(e.target.value)}\n          placeholder=\"Ingresa IP\"\n        />\n        <button onClick={addDevice}>Agregar</button>\n      </div>\n      <ul>\n        {devices.map((d) => (\n          <li key={d.ip} style={{ display: 'flex', alignItems: 'center' }}>\n            <img \n              src={getDeviceImage(d.type)} \n              alt={d.type} \n              style={{ width: 50, height: 50, marginRight: 10 }}\n            />\n            <span>{d.name || d.ip} ‚Äî {d.alive == null ? '‚è≥' : d.alive ? 'üü¢ Activo' : 'üî¥ Inactivo'}</span>\n            <button onClick={() => deleteDevice(d.ip)} style={{ marginLeft: 10 }}>‚ùå Eliminar</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}