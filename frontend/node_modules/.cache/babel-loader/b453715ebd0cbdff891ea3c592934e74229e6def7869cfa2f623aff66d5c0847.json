{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false); // Estado de carga\n  const [message, setMessage] = useState(''); // Mensaje de error o √©xito\n  const [activeTab, setActiveTab] = useState(''); // Estado para la pesta√±a activa\n\n  // Validaci√≥n b√°sica de IP\n  const isValidIP = ip => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  // Llamar al backend para obtener dispositivos\n  const fetchDevices = async () => {\n    setLoading(true); // Activar carga mientras obtenemos los dispositivos\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip)); // Hacer ping a todos los dispositivos\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false); // Desactivar carga una vez que se obtienen los dispositivos\n    }\n  };\n\n  // Agregar un dispositivo\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('IP no v√°lida');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/api/devices', {\n        ip: ipInput,\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput ? parentInput : null // Si el dispositivo tiene padre, se pasa su _id\n      });\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      setMessage('Dispositivo agregado exitosamente');\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n      setMessage('Error al agregar dispositivo');\n    }\n  };\n\n  // Eliminar un dispositivo\n  const deleteDevice = async ip => {\n    if (window.confirm('¬øEst√°s seguro de que quieres eliminar este dispositivo?')) {\n      try {\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\n        fetchDevices(); // Actualizar la lista de dispositivos despu√©s de eliminar uno\n      } catch (err) {\n        console.error('Error deleting device:', err);\n        setMessage('Error al eliminar dispositivo');\n      }\n    }\n  };\n\n  // Hacer ping a todos los dispositivos\n  const pingAll = async ips => {\n    setLoading(true); // Activar el estado de carga mientras se hace el ping\n    try {\n      const res = await axios.post('http://localhost:3001/ping', {\n        devices: ips\n      });\n      setDevices(devices => devices.map(dev => {\n        const found = res.data.find(d => d.ip === dev.ip);\n        return found ? {\n          ...dev,\n          alive: found.alive\n        } : dev;\n      }));\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n      setMessage('Error al hacer ping a los dispositivos');\n    } finally {\n      setLoading(false); // Desactivar el estado de carga una vez terminado el ping\n    }\n  };\n\n  // Obtener imagen seg√∫n el tipo de dispositivo\n  const getDeviceImage = type => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n\n  // Funci√≥n para manejar la actualizaci√≥n manual de dispositivos\n  const handleUpdateDevices = () => {\n    const ips = devices.map(d => d.ip); // Obtener las IPs de todos los dispositivos\n    pingAll(ips); // Llamar a la funci√≥n pingAll\n  };\n\n  // Agrupar los dispositivos por el segmento de IP\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.'); // Obtener el segmento de IP\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n\n  // Cambiar de pesta√±a\n  const handleTabChange = segment => {\n    setActiveTab(segment);\n  };\n  useEffect(() => {\n    fetchDevices(); // Llamar al inicio para obtener los dispositivos\n    const interval = setInterval(() => fetchDevices(), 60000); // Actualizar cada 60 segundos\n    return () => clearInterval(interval); // Limpiar intervalo al desmontar el componente\n  }, []);\n  const deviceGroups = groupDevicesBySegment();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"Ingresa IP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value),\n        placeholder: \"Ingresa Nombre del Dispositivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: parentInput,\n        onChange: e => setParentInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Seleccionar Dispositivo Padre (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: device._id,\n          children: [device.ip, \" - \", device.name]\n        }, device._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(deviceGroups).map(segment => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange(segment),\n        style: {\n          margin: 5,\n          padding: 10,\n          backgroundColor: activeTab === segment ? '#007bff' : '#ddd',\n          color: activeTab === segment ? '#fff' : '#000',\n          borderRadius: 5\n        },\n        children: segment\n      }, segment, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeTab && deviceGroups[activeTab] && deviceGroups[activeTab].length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: deviceGroups[activeTab].map(d => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getDeviceImage(d.type),\n            alt: d.type,\n            style: {\n              width: 30,\n              height: 30,\n              marginRight: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", d.name, \" \\u2014 \", d.ip, \" \\u2014 \", d.alive == null ? '‚è≥' : d.alive ? 'üü¢ Activo' : 'üî¥ Inactivo', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), d.parent ? ` (Padre: ${d.parent.ip})` : '', /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteDevice(d.ip),\n            style: {\n              marginLeft: 10\n            },\n            children: \"\\u274C Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)]\n        }, d._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay dispositivos para este segmento.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD52 Actualizando estado de dispositivos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateDevices,\n      children: \"Actualizar Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rF6aRv6QjWUIYBSvs+3ai+w36r4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","nameInput","setNameInput","typeInput","setTypeInput","parentInput","setParentInput","devices","setDevices","loading","setLoading","message","setMessage","activeTab","setActiveTab","isValidIP","ip","regex","test","fetchDevices","res","get","data","pingAll","map","d","err","console","error","addDevice","post","name","type","parent","deleteDevice","window","confirm","delete","ips","dev","found","find","alive","getDeviceImage","handleUpdateDevices","groupDevicesBySegment","groups","reduce","acc","device","segment","split","slice","join","push","handleTabChange","interval","setInterval","clearInterval","deviceGroups","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","placeholder","_id","onClick","Object","keys","margin","backgroundColor","color","borderRadius","length","display","alignItems","src","alt","width","height","marginRight","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);  // Estado de carga\n  const [message, setMessage] = useState('');  // Mensaje de error o √©xito\n  const [activeTab, setActiveTab] = useState('');  // Estado para la pesta√±a activa\n\n  // Validaci√≥n b√°sica de IP\n  const isValidIP = (ip) => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  // Llamar al backend para obtener dispositivos\n  const fetchDevices = async () => {\n    setLoading(true); // Activar carga mientras obtenemos los dispositivos\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));  // Hacer ping a todos los dispositivos\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false); // Desactivar carga una vez que se obtienen los dispositivos\n    }\n  };\n\n  // Agregar un dispositivo\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('IP no v√°lida');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:3001/api/devices', {\n        ip: ipInput,\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput ? parentInput : null,  // Si el dispositivo tiene padre, se pasa su _id\n      });\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      setMessage('Dispositivo agregado exitosamente');\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n      setMessage('Error al agregar dispositivo');\n    }\n  };\n\n  // Eliminar un dispositivo\n  const deleteDevice = async (ip) => {\n    if (window.confirm('¬øEst√°s seguro de que quieres eliminar este dispositivo?')) {\n      try {\n        await axios.delete(`http://localhost:3001/devices/${ip}`);\n        fetchDevices();  // Actualizar la lista de dispositivos despu√©s de eliminar uno\n      } catch (err) {\n        console.error('Error deleting device:', err);\n        setMessage('Error al eliminar dispositivo');\n      }\n    }\n  };\n\n  // Hacer ping a todos los dispositivos\n  const pingAll = async (ips) => {\n    setLoading(true);  // Activar el estado de carga mientras se hace el ping\n    try {\n      const res = await axios.post('http://localhost:3001/ping', { devices: ips });\n      setDevices(devices =>\n        devices.map(dev => {\n          const found = res.data.find(d => d.ip === dev.ip);\n          return found ? { ...dev, alive: found.alive } : dev;\n        })\n      );\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n      setMessage('Error al hacer ping a los dispositivos');\n    } finally {\n      setLoading(false);  // Desactivar el estado de carga una vez terminado el ping\n    }\n  };\n\n  // Obtener imagen seg√∫n el tipo de dispositivo\n  const getDeviceImage = (type) => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n\n  // Funci√≥n para manejar la actualizaci√≥n manual de dispositivos\n  const handleUpdateDevices = () => {\n    const ips = devices.map(d => d.ip);  // Obtener las IPs de todos los dispositivos\n    pingAll(ips);  // Llamar a la funci√≥n pingAll\n  };\n\n  // Agrupar los dispositivos por el segmento de IP\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');  // Obtener el segmento de IP\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n\n    return groups;\n  };\n\n  // Cambiar de pesta√±a\n  const handleTabChange = (segment) => {\n    setActiveTab(segment);\n  };\n\n  useEffect(() => {\n    fetchDevices();  // Llamar al inicio para obtener los dispositivos\n    const interval = setInterval(() => fetchDevices(), 60000);  // Actualizar cada 60 segundos\n    return () => clearInterval(interval);  // Limpiar intervalo al desmontar el componente\n  }, []);\n\n  const deviceGroups = groupDevicesBySegment();\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Monitor de Dispositivos</h1>\n\n      <div style={{ marginBottom: 10 }}>\n        <input\n          value={ipInput}\n          onChange={(e) => setIpInput(e.target.value)}\n          placeholder=\"Ingresa IP\"\n        />\n        <input\n          value={nameInput}\n          onChange={(e) => setNameInput(e.target.value)}\n          placeholder=\"Ingresa Nombre del Dispositivo\"\n        />\n        <select value={typeInput} onChange={(e) => setTypeInput(e.target.value)}>\n          <option value=\"router\">Router</option>\n          <option value=\"antena\">Antena</option>\n          <option value=\"server\">Server</option>\n        </select>\n        <select\n          value={parentInput}\n          onChange={(e) => setParentInput(e.target.value)}\n        >\n          <option value=\"\">Seleccionar Dispositivo Padre (opcional)</option>\n          {devices.map((device) => (\n            <option key={device._id} value={device._id}>\n              {device.ip} - {device.name}\n            </option>\n          ))}\n        </select>\n        <button onClick={addDevice}>Agregar</button>\n      </div>\n\n      {message && <p>{message}</p>}\n\n      <div>\n        {/* Pesta√±as para cada segmento de IP */}\n        {Object.keys(deviceGroups).map(segment => (\n          <button\n            key={segment}\n            onClick={() => handleTabChange(segment)}\n            style={{\n              margin: 5,\n              padding: 10,\n              backgroundColor: activeTab === segment ? '#007bff' : '#ddd',\n              color: activeTab === segment ? '#fff' : '#000',\n              borderRadius: 5\n            }}\n          >\n            {segment}\n          </button>\n        ))}\n      </div>\n\n      {/* Mostrar dispositivos seg√∫n la pesta√±a activa */}\n      <div>\n        {activeTab && deviceGroups[activeTab] && deviceGroups[activeTab].length > 0 ? (\n          <ul>\n            {deviceGroups[activeTab].map((d) => (\n              <li key={d._id} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n                <img src={getDeviceImage(d.type)} alt={d.type} style={{ width: 30, height: 30, marginRight: 10 }} />\n                <span> {d.name} ‚Äî {d.ip} ‚Äî {d.alive == null ? '‚è≥' : d.alive ? 'üü¢ Activo' : 'üî¥ Inactivo'} </span>\n                {d.parent ? ` (Padre: ${d.parent.ip})` : ''}\n                <button onClick={() => deleteDevice(d.ip)} style={{ marginLeft: 10 }}>‚ùå Eliminar</button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No hay dispositivos para este segmento.</p>\n        )}\n      </div>\n\n      {loading && <p>üïí Actualizando estado de dispositivos...</p>}\n\n      {/* Bot√≥n para actualizar manualmente los dispositivos */}\n      <button onClick={handleUpdateDevices}>Actualizar Todos</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EAChD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC7C,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAEjD;EACA,MAAMsB,SAAS,GAAIC,EAAE,IAAK;IACxB,MAAMC,KAAK,GAAG,kKAAkK;IAChL,OAAOA,KAAK,CAACC,IAAI,CAACF,EAAE,CAAC;EACvB,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BT,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACF,MAAMU,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,+BAA+B,CAAC;MAC5Db,UAAU,CAACY,GAAG,CAACE,IAAI,CAAC;MACpBC,OAAO,CAACH,GAAG,CAACE,IAAI,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,CAAC,CAAC,CAAC,CAAE;IACrC,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC;IAC/C,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACd,SAAS,CAAChB,OAAO,CAAC,EAAE;MACvBa,UAAU,CAAC,cAAc,CAAC;MAC1B;IACF;IAEA,IAAI;MACF,MAAMlB,KAAK,CAACoC,IAAI,CAAC,mCAAmC,EAAE;QACpDd,EAAE,EAAEjB,OAAO;QACXgC,IAAI,EAAE9B,SAAS;QACf+B,IAAI,EAAE7B,SAAS;QACf8B,MAAM,EAAE5B,WAAW,GAAGA,WAAW,GAAG,IAAI,CAAG;MAC7C,CAAC,CAAC;MACFL,UAAU,CAAC,EAAE,CAAC;MACdE,YAAY,CAAC,EAAE,CAAC;MAChBE,YAAY,CAAC,QAAQ,CAAC;MACtBE,cAAc,CAAC,EAAE,CAAC;MAClBM,UAAU,CAAC,mCAAmC,CAAC;IACjD,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDhB,UAAU,CAAC,8BAA8B,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMsB,YAAY,GAAG,MAAOlB,EAAE,IAAK;IACjC,IAAImB,MAAM,CAACC,OAAO,CAAC,yDAAyD,CAAC,EAAE;MAC7E,IAAI;QACF,MAAM1C,KAAK,CAAC2C,MAAM,CAAC,iCAAiCrB,EAAE,EAAE,CAAC;QACzDG,YAAY,CAAC,CAAC,CAAC,CAAE;MACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;QAC5Cd,UAAU,CAAC,+BAA+B,CAAC;MAC7C;IACF;EACF,CAAC;;EAED;EACA,MAAMW,OAAO,GAAG,MAAOe,GAAG,IAAK;IAC7B5B,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;IACnB,IAAI;MACF,MAAMU,GAAG,GAAG,MAAM1B,KAAK,CAACoC,IAAI,CAAC,4BAA4B,EAAE;QAAEvB,OAAO,EAAE+B;MAAI,CAAC,CAAC;MAC5E9B,UAAU,CAACD,OAAO,IAChBA,OAAO,CAACiB,GAAG,CAACe,GAAG,IAAI;QACjB,MAAMC,KAAK,GAAGpB,GAAG,CAACE,IAAI,CAACmB,IAAI,CAAChB,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKuB,GAAG,CAACvB,EAAE,CAAC;QACjD,OAAOwB,KAAK,GAAG;UAAE,GAAGD,GAAG;UAAEG,KAAK,EAAEF,KAAK,CAACE;QAAM,CAAC,GAAGH,GAAG;MACrD,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOb,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5Cd,UAAU,CAAC,wCAAwC,CAAC;IACtD,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;IACtB;EACF,CAAC;;EAED;EACA,MAAMiC,cAAc,GAAIX,IAAI,IAAK;IAC/B,QAAQA,IAAI;MACV,KAAK,QAAQ;QACX,OAAO,oBAAoB;MAC7B,KAAK,QAAQ;QACX,OAAO,oBAAoB;MAC7B,KAAK,QAAQ;QACX,OAAO,oBAAoB;MAC7B;QACE,OAAO,qBAAqB;IAChC;EACF,CAAC;;EAED;EACA,MAAMY,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMN,GAAG,GAAG/B,OAAO,CAACiB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,CAAC,CAAC,CAAE;IACrCO,OAAO,CAACe,GAAG,CAAC,CAAC,CAAE;EACjB,CAAC;;EAED;EACA,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,MAAM,GAAGvC,OAAO,CAACwC,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;MAC7C,MAAMC,OAAO,GAAGD,MAAM,CAACjC,EAAE,CAACmC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAE;MAC7D,IAAI,CAACL,GAAG,CAACE,OAAO,CAAC,EAAE;QACjBF,GAAG,CAACE,OAAO,CAAC,GAAG,EAAE;MACnB;MACAF,GAAG,CAACE,OAAO,CAAC,CAACI,IAAI,CAACL,MAAM,CAAC;MACzB,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAOF,MAAM;EACf,CAAC;;EAED;EACA,MAAMS,eAAe,GAAIL,OAAO,IAAK;IACnCpC,YAAY,CAACoC,OAAO,CAAC;EACvB,CAAC;EAED1D,SAAS,CAAC,MAAM;IACd2B,YAAY,CAAC,CAAC,CAAC,CAAE;IACjB,MAAMqC,QAAQ,GAAGC,WAAW,CAAC,MAAMtC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAE;IAC5D,OAAO,MAAMuC,aAAa,CAACF,QAAQ,CAAC,CAAC,CAAE;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,YAAY,GAAGd,qBAAqB,CAAC,CAAC;EAE5C,oBACEjD,OAAA;IAAKgE,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1BlE,OAAA;MAAAkE,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhCtE,OAAA;MAAKgE,KAAK,EAAE;QAAEO,YAAY,EAAE;MAAG,CAAE;MAAAL,QAAA,gBAC/BlE,OAAA;QACEwE,KAAK,EAAErE,OAAQ;QACfsE,QAAQ,EAAGC,CAAC,IAAKtE,UAAU,CAACsE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CI,WAAW,EAAC;MAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFtE,OAAA;QACEwE,KAAK,EAAEnE,SAAU;QACjBoE,QAAQ,EAAGC,CAAC,IAAKpE,YAAY,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,WAAW,EAAC;MAAgC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFtE,OAAA;QAAQwE,KAAK,EAAEjE,SAAU;QAACkE,QAAQ,EAAGC,CAAC,IAAKlE,YAAY,CAACkE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAN,QAAA,gBACtElE,OAAA;UAAQwE,KAAK,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtCtE,OAAA;UAAQwE,KAAK,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtCtE,OAAA;UAAQwE,KAAK,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACTtE,OAAA;QACEwE,KAAK,EAAE/D,WAAY;QACnBgE,QAAQ,EAAGC,CAAC,IAAKhE,cAAc,CAACgE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAN,QAAA,gBAEhDlE,OAAA;UAAQwE,KAAK,EAAC,EAAE;UAAAN,QAAA,EAAC;QAAwC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACjE3D,OAAO,CAACiB,GAAG,CAAEyB,MAAM,iBAClBrD,OAAA;UAAyBwE,KAAK,EAAEnB,MAAM,CAACwB,GAAI;UAAAX,QAAA,GACxCb,MAAM,CAACjC,EAAE,EAAC,KAAG,EAACiC,MAAM,CAAClB,IAAI;QAAA,GADfkB,MAAM,CAACwB,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTtE,OAAA;QAAQ8E,OAAO,EAAE7C,SAAU;QAAAiC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAELvD,OAAO,iBAAIf,OAAA;MAAAkE,QAAA,EAAInD;IAAO;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5BtE,OAAA;MAAAkE,QAAA,EAEGa,MAAM,CAACC,IAAI,CAACjB,YAAY,CAAC,CAACnC,GAAG,CAAC0B,OAAO,iBACpCtD,OAAA;QAEE8E,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACL,OAAO,CAAE;QACxCU,KAAK,EAAE;UACLiB,MAAM,EAAE,CAAC;UACThB,OAAO,EAAE,EAAE;UACXiB,eAAe,EAAEjE,SAAS,KAAKqC,OAAO,GAAG,SAAS,GAAG,MAAM;UAC3D6B,KAAK,EAAElE,SAAS,KAAKqC,OAAO,GAAG,MAAM,GAAG,MAAM;UAC9C8B,YAAY,EAAE;QAChB,CAAE;QAAAlB,QAAA,EAEDZ;MAAO,GAVHA,OAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWN,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNtE,OAAA;MAAAkE,QAAA,EACGjD,SAAS,IAAI8C,YAAY,CAAC9C,SAAS,CAAC,IAAI8C,YAAY,CAAC9C,SAAS,CAAC,CAACoE,MAAM,GAAG,CAAC,gBACzErF,OAAA;QAAAkE,QAAA,EACGH,YAAY,CAAC9C,SAAS,CAAC,CAACW,GAAG,CAAEC,CAAC,iBAC7B7B,OAAA;UAAgBgE,KAAK,EAAE;YAAEsB,OAAO,EAAE,MAAM;YAAEC,UAAU,EAAE,QAAQ;YAAEhB,YAAY,EAAE;UAAO,CAAE;UAAAL,QAAA,gBACrFlE,OAAA;YAAKwF,GAAG,EAAEzC,cAAc,CAAClB,CAAC,CAACO,IAAI,CAAE;YAACqD,GAAG,EAAE5D,CAAC,CAACO,IAAK;YAAC4B,KAAK,EAAE;cAAE0B,KAAK,EAAE,EAAE;cAAEC,MAAM,EAAE,EAAE;cAAEC,WAAW,EAAE;YAAG;UAAE;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpGtE,OAAA;YAAAkE,QAAA,GAAM,GAAC,EAACrC,CAAC,CAACM,IAAI,EAAC,UAAG,EAACN,CAAC,CAACT,EAAE,EAAC,UAAG,EAACS,CAAC,CAACiB,KAAK,IAAI,IAAI,GAAG,GAAG,GAAGjB,CAAC,CAACiB,KAAK,GAAG,WAAW,GAAG,aAAa,EAAC,GAAC;UAAA;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACjGzC,CAAC,CAACQ,MAAM,GAAG,YAAYR,CAAC,CAACQ,MAAM,CAACjB,EAAE,GAAG,GAAG,EAAE,eAC3CpB,OAAA;YAAQ8E,OAAO,EAAEA,CAAA,KAAMxC,YAAY,CAACT,CAAC,CAACT,EAAE,CAAE;YAAC4C,KAAK,EAAE;cAAE6B,UAAU,EAAE;YAAG,CAAE;YAAA3B,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAJlFzC,CAAC,CAACgD,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELtE,OAAA;QAAAkE,QAAA,EAAG;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAC9C;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELzD,OAAO,iBAAIb,OAAA;MAAAkE,QAAA,EAAG;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAG5DtE,OAAA;MAAQ8E,OAAO,EAAE9B,mBAAoB;MAAAkB,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACpE,EAAA,CArNQD,GAAG;AAAA6F,EAAA,GAAH7F,GAAG;AAuNZ,eAAeA,GAAG;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}