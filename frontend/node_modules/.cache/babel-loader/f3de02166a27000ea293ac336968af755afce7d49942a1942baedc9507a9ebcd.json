{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentIp, setParentIp] = useState(''); // IP del dispositivo padre\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n\n  // Validación básica de IP\n  const isValidIP = ip => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  // Llamar al backend para obtener dispositivos\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Agregar un dispositivo\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('Por favor, ingresa una IP válida');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput.trim(),\n        name: nameInput.trim(),\n        type: typeInput,\n        parentIp: parentIp.trim() || null // Asignar un dispositivo padre si se elige uno\n      });\n      setMessage('Dispositivo agregado con éxito!');\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentIp('');\n      fetchDevices();\n    } catch (err) {\n      setMessage('Error al agregar dispositivo.');\n      console.error('Error adding device:', err);\n    }\n  };\n\n  // Hacer ping a todos los dispositivos\n  const pingAll = async ips => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', {\n        devices: ips\n      });\n      setDevices(devices => devices.map(dev => {\n        const found = res.data.find(d => d.ip === dev.ip);\n        return found ? {\n          ...dev,\n          alive: found.alive\n        } : dev;\n      }));\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener imagen según el tipo de dispositivo\n  const getDeviceImage = type => {\n    const deviceImages = {\n      router: '/images/router.png',\n      antena: '/images/antena.png',\n      server: '/images/server.png',\n      default: '/images/default.png'\n    };\n    return deviceImages[type] || deviceImages.default;\n  };\n\n  // Agrupar los dispositivos por segmento de IP\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n\n  // Obtener dispositivos hijos de un dispositivo específico\n  const getChildren = parentIp => {\n    return devices.filter(dev => dev.parentIp === parentIp);\n  };\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(() => fetchDevices(), 20000);\n    return () => clearInterval(interval);\n  }, []);\n  const deviceGroups = groupDevicesBySegment();\n\n  // Función para mostrar dispositivos de manera jerárquica\n  const renderDeviceHierarchy = (device, level = 0) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: `${level * 30}px`,\n        // Aquí se maneja la indentación para el efecto de cascada\n        marginBottom: '10px',\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: '#f0f0f0',\n        // Fondo para hacer resaltar cada nivel\n        padding: '5px',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: getDeviceImage(device.type),\n        alt: device.type,\n        style: {\n          width: 30,\n          height: 30,\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [device.name, \" \\u2014 \", device.ip, \" \\u2014 \", device.alive == null ? '⏳' : device.alive ? '🟢 Activo' : '🔴 Inactivo']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), getChildren(device.ip).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getChildren(device.ip).map(child => renderDeviceHierarchy(child, level + 1))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteDevice(device.ip),\n        style: {\n          marginLeft: 10\n        },\n        children: \"\\u274C Eliminar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"Ingresa IP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value),\n        placeholder: \"Ingresa Nombre del Dispositivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: parentIp,\n        onChange: e => setParentIp(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecciona un dispositivo padre (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), devices.map(dev => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dev.ip,\n          children: [dev.name, \" - \", dev.ip]\n        }, dev.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(deviceGroups).map(segment => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(segment),\n        style: {\n          margin: 5,\n          padding: 10,\n          backgroundColor: activeTab === segment ? '#007bff' : '#ddd',\n          color: activeTab === segment ? '#fff' : '#000',\n          borderRadius: 5\n        },\n        children: segment\n      }, segment, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeTab && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: deviceGroups[activeTab].map(dev => renderDeviceHierarchy(dev))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD52 Actualizando estado de dispositivos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pingAll(devices.map(d => d.ip)),\n      children: \"Actualizar Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7p6qOU7rvu9D9rjBjxYV0kh5wyc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","nameInput","setNameInput","typeInput","setTypeInput","parentIp","setParentIp","devices","setDevices","loading","setLoading","message","setMessage","activeTab","setActiveTab","isValidIP","ip","regex","test","fetchDevices","res","get","data","pingAll","map","d","err","console","error","addDevice","post","trim","name","type","ips","dev","found","find","alive","getDeviceImage","deviceImages","router","antena","server","default","groupDevicesBySegment","groups","reduce","acc","device","segment","split","slice","join","push","getChildren","filter","interval","setInterval","clearInterval","deviceGroups","renderDeviceHierarchy","level","style","marginLeft","marginBottom","display","alignItems","backgroundColor","padding","borderRadius","children","src","alt","width","height","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","length","child","onClick","deleteDevice","value","onChange","e","target","placeholder","Object","keys","margin","color","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentIp, setParentIp] = useState(''); // IP del dispositivo padre\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n\n  // Validación básica de IP\n  const isValidIP = (ip) => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  // Llamar al backend para obtener dispositivos\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Agregar un dispositivo\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('Por favor, ingresa una IP válida');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput.trim(),\n        name: nameInput.trim(),\n        type: typeInput,\n        parentIp: parentIp.trim() || null // Asignar un dispositivo padre si se elige uno\n      });\n      setMessage('Dispositivo agregado con éxito!');\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentIp('');\n      fetchDevices();\n    } catch (err) {\n      setMessage('Error al agregar dispositivo.');\n      console.error('Error adding device:', err);\n    }\n  };\n\n  // Hacer ping a todos los dispositivos\n  const pingAll = async (ips) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', { devices: ips });\n      setDevices(devices =>\n        devices.map(dev => {\n          const found = res.data.find(d => d.ip === dev.ip);\n          return found ? { ...dev, alive: found.alive } : dev;\n        })\n      );\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener imagen según el tipo de dispositivo\n  const getDeviceImage = (type) => {\n    const deviceImages = {\n      router: '/images/router.png',\n      antena: '/images/antena.png',\n      server: '/images/server.png',\n      default: '/images/default.png',\n    };\n    return deviceImages[type] || deviceImages.default;\n  };\n\n  // Agrupar los dispositivos por segmento de IP\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    \n    return groups;\n  };\n\n  // Obtener dispositivos hijos de un dispositivo específico\n  const getChildren = (parentIp) => {\n    return devices.filter(dev => dev.parentIp === parentIp);\n  };\n\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(() => fetchDevices(), 20000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const deviceGroups = groupDevicesBySegment();\n\n  // Función para mostrar dispositivos de manera jerárquica\n  const renderDeviceHierarchy = (device, level = 0) => {\n    return (\n      <div \n        style={{\n          marginLeft: `${level * 30}px`, // Aquí se maneja la indentación para el efecto de cascada\n          marginBottom: '10px',\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: '#f0f0f0', // Fondo para hacer resaltar cada nivel\n          padding: '5px',\n          borderRadius: '5px',\n        }}\n      >\n        <img\n          src={getDeviceImage(device.type)}\n          alt={device.type}\n          style={{ width: 30, height: 30, marginRight: 10 }}\n        />\n        <span> \n          {device.name} — {device.ip} — {device.alive == null ? '⏳' : device.alive ? '🟢 Activo' : '🔴 Inactivo'} \n        </span>\n\n        {/* Dispositivos hijos */}\n        {getChildren(device.ip).length > 0 && (\n          <div>\n            {getChildren(device.ip).map(child => renderDeviceHierarchy(child, level + 1))}\n          </div>\n        )}\n\n        <button onClick={() => deleteDevice(device.ip)} style={{ marginLeft: 10 }}>❌ Eliminar</button>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Monitor de Dispositivos</h1>\n      \n      <div style={{ marginBottom: 10 }}>\n        <input\n          value={ipInput}\n          onChange={(e) => setIpInput(e.target.value)}\n          placeholder=\"Ingresa IP\"\n        />\n        <input\n          value={nameInput}\n          onChange={(e) => setNameInput(e.target.value)}\n          placeholder=\"Ingresa Nombre del Dispositivo\"\n        />\n        <select value={typeInput} onChange={(e) => setTypeInput(e.target.value)}>\n          <option value=\"router\">Router</option>\n          <option value=\"antena\">Antena</option>\n          <option value=\"server\">Server</option>\n        </select>\n        \n        {/* Selector de dispositivo padre */}\n        <select value={parentIp} onChange={(e) => setParentIp(e.target.value)}>\n          <option value=\"\">Selecciona un dispositivo padre (opcional)</option>\n          {devices.map((dev) => (\n            <option key={dev.ip} value={dev.ip}>{dev.name} - {dev.ip}</option>\n          ))}\n        </select>\n        \n        <button onClick={addDevice}>Agregar</button>\n      </div>\n\n      {message && <p>{message}</p>}\n\n      <div>\n        {/* Pestañas para cada segmento de IP */}\n        {Object.keys(deviceGroups).map(segment => (\n          <button\n            key={segment}\n            onClick={() => setActiveTab(segment)}\n            style={{\n              margin: 5,\n              padding: 10,\n              backgroundColor: activeTab === segment ? '#007bff' : '#ddd',\n              color: activeTab === segment ? '#fff' : '#000',\n              borderRadius: 5\n            }}\n          >\n            {segment}\n          </button>\n        ))}\n      </div>\n\n      {/* Mostrar dispositivos jerárquicamente */}\n      <div>\n        {activeTab && (\n          <div>\n            {deviceGroups[activeTab].map((dev) => renderDeviceHierarchy(dev))}\n          </div>\n        )}\n      </div>\n\n      {loading && <p>🕒 Actualizando estado de dispositivos...</p>}\n\n      {/* Botón para actualizar manualmente los dispositivos */}\n      <button onClick={() => pingAll(devices.map(d => d.ip))}>Actualizar Todos</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}