{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\DeviceList.jsx\",\n  _s = $RefreshSig$();\n// DeviceList.jsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = () => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentInput, setParentInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Obtener dispositivos desde el backend\n  useEffect(() => {\n    const fetchDevices = async () => {\n      setLoading(true);\n      try {\n        const res = await axios.get('http://localhost:3001/api/devices');\n        setDevices(res.data);\n      } catch (error) {\n        console.error('Error al obtener dispositivos:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDevices();\n  }, []);\n\n  // Agregar un dispositivo\n  const addDevice = async () => {\n    try {\n      await axios.post('http://localhost:3001/api/devices', {\n        ip: ipInput,\n        name: nameInput,\n        type: typeInput,\n        parent: parentInput ? parentInput : null // Si el dispositivo tiene padre, se pasa su _id\n      });\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentInput('');\n      alert('Dispositivo agregado exitosamente');\n    } catch (error) {\n      console.error('Error al agregar dispositivo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"IP\",\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre\",\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: parentInput,\n        onChange: e => setParentInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Seleccionar Dispositivo Padre (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), devices.map(device => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: device._id,\n          children: [device.ip, \" - \", device.name]\n        }, device._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar Dispositivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(device => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [device.ip, \" - \", device.name, \" - \", device.type, \" - \", device.alive ? 'Activo' : 'Inactivo', device.parent ? ` (Padre: ${device.parent.ip})` : '']\n      }, device._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(DeviceList, \"OzBG7zO/mnJWVx7iF75WEHkq68A=\");\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DeviceList","_s","devices","setDevices","ipInput","setIpInput","nameInput","setNameInput","typeInput","setTypeInput","parentInput","setParentInput","loading","setLoading","fetchDevices","res","get","data","error","console","addDevice","post","ip","name","type","parent","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","map","device","_id","onClick","alive","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/DeviceList.jsx"],"sourcesContent":["// DeviceList.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DeviceList = () => {\r\n  const [devices, setDevices] = useState([]);\r\n  const [ipInput, setIpInput] = useState('');\r\n  const [nameInput, setNameInput] = useState('');\r\n  const [typeInput, setTypeInput] = useState('router');\r\n  const [parentInput, setParentInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Obtener dispositivos desde el backend\r\n  useEffect(() => {\r\n    const fetchDevices = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await axios.get('http://localhost:3001/api/devices');\r\n        setDevices(res.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener dispositivos:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchDevices();\r\n  }, []);\r\n\r\n  // Agregar un dispositivo\r\n  const addDevice = async () => {\r\n    try {\r\n      await axios.post('http://localhost:3001/api/devices', {\r\n        ip: ipInput,\r\n        name: nameInput,\r\n        type: typeInput,\r\n        parent: parentInput ? parentInput : null,  // Si el dispositivo tiene padre, se pasa su _id\r\n      });\r\n      setIpInput('');\r\n      setNameInput('');\r\n      setTypeInput('router');\r\n      setParentInput('');\r\n      alert('Dispositivo agregado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al agregar dispositivo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Lista de Dispositivos</h2>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"IP\"\r\n          value={ipInput}\r\n          onChange={(e) => setIpInput(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nombre\"\r\n          value={nameInput}\r\n          onChange={(e) => setNameInput(e.target.value)}\r\n        />\r\n        <select\r\n          value={typeInput}\r\n          onChange={(e) => setTypeInput(e.target.value)}\r\n        >\r\n          <option value=\"router\">Router</option>\r\n          <option value=\"antena\">Antena</option>\r\n          <option value=\"server\">Server</option>\r\n        </select>\r\n        <select\r\n          value={parentInput}\r\n          onChange={(e) => setParentInput(e.target.value)}\r\n        >\r\n          <option value=\"\">Seleccionar Dispositivo Padre (opcional)</option>\r\n          {devices.map((device) => (\r\n            <option key={device._id} value={device._id}>\r\n              {device.ip} - {device.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button onClick={addDevice}>Agregar Dispositivo</button>\r\n      </div>\r\n\r\n      {loading ? <p>Cargando...</p> : (\r\n        <ul>\r\n          {devices.map((device) => (\r\n            <li key={device._id}>\r\n              {device.ip} - {device.name} - {device.type} - {device.alive ? 'Activo' : 'Inactivo'}\r\n              {device.parent ? ` (Padre: ${device.parent.ip})` : ''}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeviceList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}