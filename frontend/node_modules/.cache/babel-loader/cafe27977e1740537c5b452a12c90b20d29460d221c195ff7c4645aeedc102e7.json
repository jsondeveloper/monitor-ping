{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false); // Estado de carga\n\n  const fetchDevices = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip)); // Hacer ping a todos los dispositivos\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    }\n  };\n  const addDevice = async () => {\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput.trim(),\n        name: nameInput.trim(),\n        type: typeInput\n      });\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      fetchDevices(); // Volver a obtener la lista de dispositivos\n    } catch (err) {\n      console.error('Error adding device:', err);\n    }\n  };\n  const deleteDevice = async ip => {\n    try {\n      await axios.delete(`http://localhost:3001/devices/${ip}`);\n      fetchDevices(); // Actualizar la lista de dispositivos después de eliminar uno\n    } catch (err) {\n      console.error('Error deleting device:', err);\n    }\n  };\n  const pingAll = async ips => {\n    setLoading(true); // Activar el estado de carga mientras se hace el ping\n    try {\n      const res = await axios.post('http://localhost:3001/ping', {\n        devices: ips\n      });\n      setDevices(devices => devices.map(dev => {\n        const found = res.data.find(d => d.ip === dev.ip);\n        return found ? {\n          ...dev,\n          alive: found.alive\n        } : dev;\n      }));\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n    } finally {\n      setLoading(false); // Desactivar el estado de carga una vez terminado el ping\n    }\n  };\n  const getDeviceImage = type => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n  useEffect(() => {\n    fetchDevices(); // Llamar al inicio para obtener los dispositivos\n    const interval = setInterval(() => fetchDevices(), 60000); // Actualizar cada 60 segundos\n    return () => clearInterval(interval); // Limpiar intervalo al desmontar el componente\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"Ingresa IP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value),\n        placeholder: \"Ingresa Nombre del Dispositivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: devices.map(d => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: getDeviceImage(d.type),\n          alt: d.type,\n          style: {\n            width: 30,\n            height: 30,\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", d.name, \" \\u2014 \", d.ip, \" \\u2014 \", d.alive == null ? '⏳' : d.alive ? '🟢 Activo' : '🔴 Inactivo', \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteDevice(d.ip),\n          style: {\n            marginLeft: 10\n          },\n          children: \"\\u274C Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, d.ip, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD52 Actualizando estado de dispositivos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"slaCMBF4qt9DFaWE2MqfzGwdv80=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","nameInput","setNameInput","typeInput","setTypeInput","devices","setDevices","loading","setLoading","fetchDevices","res","get","data","pingAll","map","d","ip","err","console","error","addDevice","post","trim","name","type","deleteDevice","delete","ips","dev","found","find","alive","getDeviceImage","interval","setInterval","clearInterval","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","placeholder","onClick","display","alignItems","src","alt","width","height","marginRight","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);  // Estado de carga\n\n  const fetchDevices = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));  // Hacer ping a todos los dispositivos\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    }\n  };\n\n  const addDevice = async () => {\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput.trim(),\n        name: nameInput.trim(),\n        type: typeInput\n      });\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      fetchDevices();  // Volver a obtener la lista de dispositivos\n    } catch (err) {\n      console.error('Error adding device:', err);\n    }\n  };\n\n  const deleteDevice = async (ip) => {\n    try {\n      await axios.delete(`http://localhost:3001/devices/${ip}`);\n      fetchDevices();  // Actualizar la lista de dispositivos después de eliminar uno\n    } catch (err) {\n      console.error('Error deleting device:', err);\n    }\n  };\n\n  const pingAll = async (ips) => {\n    setLoading(true);  // Activar el estado de carga mientras se hace el ping\n    try {\n      const res = await axios.post('http://localhost:3001/ping', { devices: ips });\n      setDevices(devices =>\n        devices.map(dev => {\n          const found = res.data.find(d => d.ip === dev.ip);\n          return found ? { ...dev, alive: found.alive } : dev;\n        })\n      );\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n    } finally {\n      setLoading(false);  // Desactivar el estado de carga una vez terminado el ping\n    }\n  };\n\n  const getDeviceImage = (type) => {\n    switch (type) {\n      case 'router':\n        return '/images/router.png';\n      case 'antena':\n        return '/images/antena.png';\n      case 'server':\n        return '/images/server.png';\n      default:\n        return '/images/default.png';\n    }\n  };\n\n  useEffect(() => {\n    fetchDevices();  // Llamar al inicio para obtener los dispositivos\n    const interval = setInterval(() => fetchDevices(), 60000);  // Actualizar cada 60 segundos\n    return () => clearInterval(interval);  // Limpiar intervalo al desmontar el componente\n  }, []);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Monitor de Dispositivos</h1>\n      <div style={{ marginBottom: 10 }}>\n        <input\n          value={ipInput}\n          onChange={(e) => setIpInput(e.target.value)}\n          placeholder=\"Ingresa IP\"\n        />\n        <input\n          value={nameInput}\n          onChange={(e) => setNameInput(e.target.value)}\n          placeholder=\"Ingresa Nombre del Dispositivo\"\n        />\n        <select value={typeInput} onChange={(e) => setTypeInput(e.target.value)}>\n          <option value=\"router\">Router</option>\n          <option value=\"antena\">Antena</option>\n          <option value=\"server\">Server</option>\n        </select>\n        <button onClick={addDevice}>Agregar</button>\n      </div>\n      <ul>\n        {devices.map((d) => (\n          <li key={d.ip} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n            <img src={getDeviceImage(d.type)} alt={d.type} style={{ width: 30, height: 30, marginRight: 10 }} />\n            <span> {d.name} — {d.ip} — {d.alive == null ? '⏳' : d.alive ? '🟢 Activo' : '🔴 Inactivo'}  </span>\n            <button onClick={() => deleteDevice(d.ip)} style={{ marginLeft: 10 }}>❌ Eliminar</button>\n          </li>\n        ))}\n      </ul>\n      {loading && <p>🕒 Actualizando estado de dispositivos...</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}