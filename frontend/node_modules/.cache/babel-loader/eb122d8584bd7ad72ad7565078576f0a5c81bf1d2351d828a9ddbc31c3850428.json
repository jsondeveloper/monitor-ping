{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MSI\\\\Documents\\\\GitHub\\\\monitor-ping\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentIp, setParentIp] = useState(''); // IP del dispositivo padre\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n\n  // Validación básica de IP\n  const isValidIP = ip => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  // Llamar al backend para obtener dispositivos\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Agregar un dispositivo\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('Por favor, ingresa una IP válida');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput.trim(),\n        name: nameInput.trim(),\n        type: typeInput,\n        parentIp: parentIp.trim() || null // Asignar un dispositivo padre si se elige uno\n      });\n      setMessage('Dispositivo agregado con éxito!');\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentIp('');\n      fetchDevices();\n    } catch (err) {\n      setMessage('Error al agregar dispositivo.');\n      console.error('Error adding device:', err);\n    }\n  };\n\n  // Hacer ping a todos los dispositivos\n  const pingAll = async ips => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', {\n        devices: ips\n      });\n      setDevices(devices => devices.map(dev => {\n        const found = res.data.find(d => d.ip === dev.ip);\n        return found ? {\n          ...dev,\n          alive: found.alive\n        } : dev;\n      }));\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener imagen según el tipo de dispositivo\n  const getDeviceImage = type => {\n    const deviceImages = {\n      router: '/images/router.png',\n      antena: '/images/antena.png',\n      server: '/images/server.png',\n      default: '/images/default.png'\n    };\n    return deviceImages[type] || deviceImages.default;\n  };\n\n  // Agrupar los dispositivos por segmento de IP\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    return groups;\n  };\n\n  // Obtener dispositivos hijos de un dispositivo específico\n  const getChildren = parentIp => {\n    return devices.filter(dev => dev.parentIp === parentIp);\n  };\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(() => fetchDevices(), 20000);\n    return () => clearInterval(interval);\n  }, []);\n  const deviceGroups = groupDevicesBySegment();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Monitor de Dispositivos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: ipInput,\n        onChange: e => setIpInput(e.target.value),\n        placeholder: \"Ingresa IP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: nameInput,\n        onChange: e => setNameInput(e.target.value),\n        placeholder: \"Ingresa Nombre del Dispositivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: typeInput,\n        onChange: e => setTypeInput(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"router\",\n          children: \"Router\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"antena\",\n          children: \"Antena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"server\",\n          children: \"Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: parentIp,\n        onChange: e => setParentIp(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecciona un dispositivo padre (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), devices.map(dev => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dev.ip,\n          children: [dev.name, \" - \", dev.ip]\n        }, dev.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addDevice,\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(deviceGroups).map(segment => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(segment),\n        style: {\n          margin: 5,\n          padding: 10,\n          backgroundColor: activeTab === segment ? '#007bff' : '#ddd',\n          color: activeTab === segment ? '#fff' : '#000',\n          borderRadius: 5\n        },\n        children: segment\n      }, segment, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeTab && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: deviceGroups[activeTab].map(dev => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: getDeviceImage(dev.type),\n            alt: dev.type,\n            style: {\n              width: 30,\n              height: 30,\n              marginRight: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", dev.name, \" \\u2014 \", dev.ip, \" \\u2014 \", dev.alive == null ? '⏳' : dev.alive ? '🟢 Activo' : '🔴 Inactivo', \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), getChildren(dev.ip).length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              marginLeft: 20\n            },\n            children: getChildren(dev.ip).map(child => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [child.name, \" \\u2014 \", child.ip, \" \\u2014 \", child.alive == null ? '⏳' : child.alive ? '🟢 Activo' : '🔴 Inactivo']\n            }, child.ip, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteDevice(dev.ip),\n            style: {\n              marginLeft: 10\n            },\n            children: \"\\u274C Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)]\n        }, dev.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD52 Actualizando estado de dispositivos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => pingAll(devices.map(d => d.ip)),\n      children: \"Actualizar Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7p6qOU7rvu9D9rjBjxYV0kh5wyc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","ipInput","setIpInput","nameInput","setNameInput","typeInput","setTypeInput","parentIp","setParentIp","devices","setDevices","loading","setLoading","message","setMessage","activeTab","setActiveTab","isValidIP","ip","regex","test","fetchDevices","res","get","data","pingAll","map","d","err","console","error","addDevice","post","trim","name","type","ips","dev","found","find","alive","getDeviceImage","deviceImages","router","antena","server","default","groupDevicesBySegment","groups","reduce","acc","device","segment","split","slice","join","push","getChildren","filter","interval","setInterval","clearInterval","deviceGroups","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","value","onChange","e","target","placeholder","onClick","Object","keys","margin","backgroundColor","color","borderRadius","display","alignItems","src","alt","width","height","marginRight","length","marginLeft","child","deleteDevice","_c","$RefreshReg$"],"sources":["C:/Users/MSI/Documents/GitHub/monitor-ping/frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [ipInput, setIpInput] = useState('');\n  const [nameInput, setNameInput] = useState('');\n  const [typeInput, setTypeInput] = useState('router');\n  const [parentIp, setParentIp] = useState(''); // IP del dispositivo padre\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [activeTab, setActiveTab] = useState('');\n\n  // Validación básica de IP\n  const isValidIP = (ip) => {\n    const regex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    return regex.test(ip);\n  };\n\n  // Llamar al backend para obtener dispositivos\n  const fetchDevices = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get('http://localhost:3001/devices');\n      setDevices(res.data);\n      pingAll(res.data.map(d => d.ip));\n    } catch (err) {\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Agregar un dispositivo\n  const addDevice = async () => {\n    if (!isValidIP(ipInput)) {\n      setMessage('Por favor, ingresa una IP válida');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:3001/devices', {\n        ip: ipInput.trim(),\n        name: nameInput.trim(),\n        type: typeInput,\n        parentIp: parentIp.trim() || null // Asignar un dispositivo padre si se elige uno\n      });\n      setMessage('Dispositivo agregado con éxito!');\n      setIpInput('');\n      setNameInput('');\n      setTypeInput('router');\n      setParentIp('');\n      fetchDevices();\n    } catch (err) {\n      setMessage('Error al agregar dispositivo.');\n      console.error('Error adding device:', err);\n    }\n  };\n\n  // Hacer ping a todos los dispositivos\n  const pingAll = async (ips) => {\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:3001/ping', { devices: ips });\n      setDevices(devices =>\n        devices.map(dev => {\n          const found = res.data.find(d => d.ip === dev.ip);\n          return found ? { ...dev, alive: found.alive } : dev;\n        })\n      );\n    } catch (err) {\n      console.error('Error pinging devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener imagen según el tipo de dispositivo\n  const getDeviceImage = (type) => {\n    const deviceImages = {\n      router: '/images/router.png',\n      antena: '/images/antena.png',\n      server: '/images/server.png',\n      default: '/images/default.png',\n    };\n    return deviceImages[type] || deviceImages.default;\n  };\n\n  // Agrupar los dispositivos por segmento de IP\n  const groupDevicesBySegment = () => {\n    const groups = devices.reduce((acc, device) => {\n      const segment = device.ip.split('.').slice(0, 3).join('.');\n      if (!acc[segment]) {\n        acc[segment] = [];\n      }\n      acc[segment].push(device);\n      return acc;\n    }, {});\n    \n    return groups;\n  };\n\n  // Obtener dispositivos hijos de un dispositivo específico\n  const getChildren = (parentIp) => {\n    return devices.filter(dev => dev.parentIp === parentIp);\n  };\n\n  useEffect(() => {\n    fetchDevices();\n    const interval = setInterval(() => fetchDevices(), 20000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const deviceGroups = groupDevicesBySegment();\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Monitor de Dispositivos</h1>\n      \n      <div style={{ marginBottom: 10 }}>\n        <input\n          value={ipInput}\n          onChange={(e) => setIpInput(e.target.value)}\n          placeholder=\"Ingresa IP\"\n        />\n        <input\n          value={nameInput}\n          onChange={(e) => setNameInput(e.target.value)}\n          placeholder=\"Ingresa Nombre del Dispositivo\"\n        />\n        <select value={typeInput} onChange={(e) => setTypeInput(e.target.value)}>\n          <option value=\"router\">Router</option>\n          <option value=\"antena\">Antena</option>\n          <option value=\"server\">Server</option>\n        </select>\n        \n        {/* Selector de dispositivo padre */}\n        <select value={parentIp} onChange={(e) => setParentIp(e.target.value)}>\n          <option value=\"\">Selecciona un dispositivo padre (opcional)</option>\n          {devices.map((dev) => (\n            <option key={dev.ip} value={dev.ip}>{dev.name} - {dev.ip}</option>\n          ))}\n        </select>\n        \n        <button onClick={addDevice}>Agregar</button>\n      </div>\n\n      {message && <p>{message}</p>}\n\n      <div>\n        {/* Pestañas para cada segmento de IP */}\n        {Object.keys(deviceGroups).map(segment => (\n          <button\n            key={segment}\n            onClick={() => setActiveTab(segment)}\n            style={{\n              margin: 5,\n              padding: 10,\n              backgroundColor: activeTab === segment ? '#007bff' : '#ddd',\n              color: activeTab === segment ? '#fff' : '#000',\n              borderRadius: 5\n            }}\n          >\n            {segment}\n          </button>\n        ))}\n      </div>\n\n      {/* Mostrar dispositivos jerárquicamente */}\n      <div>\n        {activeTab && (\n          <ul>\n            {deviceGroups[activeTab].map((dev) => (\n              <li key={dev.ip} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n                <img src={getDeviceImage(dev.type)} alt={dev.type} style={{ width: 30, height: 30, marginRight: 10 }} />\n                <span> {dev.name} — {dev.ip} — {dev.alive == null ? '⏳' : dev.alive ? '🟢 Activo' : '🔴 Inactivo'} </span>\n                \n                {/* Dispositivos hijos */}\n                {getChildren(dev.ip).length > 0 && (\n                  <ul style={{ marginLeft: 20 }}>\n                    {getChildren(dev.ip).map(child => (\n                      <li key={child.ip}>\n                        {child.name} — {child.ip} — {child.alive == null ? '⏳' : child.alive ? '🟢 Activo' : '🔴 Inactivo'}\n                      </li>\n                    ))}\n                  </ul>\n                )}\n\n                <button onClick={() => deleteDevice(dev.ip)} style={{ marginLeft: 10 }}>❌ Eliminar</button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      {loading && <p>🕒 Actualizando estado de dispositivos...</p>}\n\n      {/* Botón para actualizar manualmente los dispositivos */}\n      <button onClick={() => pingAll(devices.map(d => d.ip))}>Actualizar Todos</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}